package com.example.demo.entities;
// Generated Dec 3, 2019 5:50:24 PM by Hibernate Tools 5.1.7.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Length;

/**
 * Subject generated by hbm2java
 */
@Entity
@Table(name = "subject", catalog = "testingdb")
public class Subject implements java.io.Serializable {

	private Integer id;
	
	@NotNull
	@NotEmpty
	@Length(min = 5, max =100)
	private String name;
	private Set<Exam> exams = new HashSet<Exam>(0);
	private Set<Cv> cvs = new HashSet<Cv>(0);
	private Set<Question> questions = new HashSet<Question>(0);

	public Subject() {
	}

	public Subject(String name, Set<Exam> exams, Set<Cv> cvs, Set<Question> questions) {
		this.name = name;
		this.exams = exams;
		this.cvs = cvs;
		this.questions = questions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NAME", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subject")
	public Set<Exam> getExams() {
		return this.exams;
	}

	public void setExams(Set<Exam> exams) {
		this.exams = exams;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subject")
	public Set<Cv> getCvs() {
		return this.cvs;
	}

	public void setCvs(Set<Cv> cvs) {
		this.cvs = cvs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subject")
	public Set<Question> getQuestions() {
		return this.questions;
	}

	public void setQuestions(Set<Question> questions) {
		this.questions = questions;
	}

}
